{"name":"JSKlass","tagline":"Create classes with prototype, static attributes, mixins in JavaScript and extend them","body":"# JSKlass [![npm version](https://badge.fury.io/js/jsklass.svg)](http://badge.fury.io/js/jsklass) [![Build Status](https://travis-ci.org/ghaiklor/jsklass.svg?branch=master)](https://travis-ci.org/ghaiklor/jsklass)\r\n\r\n*Create classes with prototype object, static properties and mixins in JavaScript.*\r\n\r\n## How to get it?\r\n\r\n### Install from npm\r\n\r\n```shell\r\nnpm install jsklass\r\n```\r\n\r\n### Install from bower\r\n\r\n```shell\r\nbower install jsklass\r\n```\r\n\r\n## How to use it?\r\n\r\n### Use in NodeJS\r\n\r\nInclude ```jsklass``` module and you can start work with it.\r\n\r\n```javascript\r\nvar Class = require('jsklass');\r\n\r\nvar Basic = Class.create();\r\nvar Extended = Basic.extend();\r\n```\r\n\r\n### Use in browser\r\n\r\nJSKlass creates a global variable ```Class``` which you can use.\r\n\r\n```javascript\r\nvar Basic = Class.create();\r\nvar Extended = Basic.extend();\r\n```\r\n\r\n## Getting started\r\n\r\nFor example, you can create Animal class and extend it with Cat class.\r\n\r\n```javascript\r\nvar Animal = Class.create({\r\n    init: function() {\r\n        this.type = \"Animal\";\r\n    },\r\n\r\n    getType: function() {\r\n        return this.type;\r\n    }\r\n});\r\n\r\nvar Cat = Animal.extend({\r\n    init: function() {\r\n        this.type = \"Cat\";\r\n    }\r\n});\r\n\r\nvar justAnimal = new Animal();\r\njustAnimal.getType(); // Animal\r\n\r\nvar justCat = new Cat();\r\njustCat.getType(); // Cat\r\n```\r\n\r\n## API\r\n\r\nAPI has simple method. When you create Class you call `create` method of Class object.\r\n\r\nIf you want extends then call `extend` in existing class.\r\n\r\n```javascript\r\nvar result = Class.create(prototype, staticProperties, [mixinsArray]);\r\nresult.extend(prototype, staticProperties, [mixinsArray]);\r\n```\r\n\r\n## Examples\r\n\r\n### Basic creating and extending\r\n\r\n```javascript\r\nvar BasicClass = Class.create();\r\nvar ExtendedClass = BasicClass.extend();\r\nvar MoreExtendedClass = ExtendedClass.extend();\r\n```\r\n\r\n### Creating classes with methods and attributes and extend them\r\n\r\n```javascript\r\nvar BasicClass = Class.create({\r\n    type: \"Basic\",\r\n\r\n    init: function() {\r\n        this.foo = \"bar\";\r\n    },\r\n\r\n    getType: function() {\r\n        return this.type;\r\n    }\r\n});\r\n\r\nvar ExtendedClass = BasicClass.extend({\r\n    type: \"ExtendedClass\",\r\n\r\n    init: function() {\r\n        this.bar = \"foo\";\r\n    }\r\n});\r\n\r\nvar MoreClass = BasicClass.extend({\r\n    type: \"MoreClass\"\r\n});\r\n\r\nvar basic = new BasicClass();\r\nbasic.getType(); // Basic\r\nbasic.foo; // bar\r\n\r\nvar extended = new ExtendedClass();\r\nextended.getType(); // ExtendedClass\r\nextended.foo; // bar\r\nextended.bar; // foo\r\n\r\nvar more = new MoreClass();\r\nmore.getType(); // MoreClass\r\nmore.foo; // bar\r\nmore.bar; // undefined\r\n```\r\n\r\n### Creating classes with prototype and static methods\r\n\r\n```javascript\r\nvar BasicClass = Class.create({}, {\r\n    staticFoo: 'bar'\r\n});\r\n\r\nvar ExtendedClass = BasicClass.extend({}, {\r\n    staticBar: 'foo'\r\n});\r\n\r\nBasicClass.staticFoo; // bar\r\nBasicClass.staticBar; // undefined\r\n\r\nExtendedClass.staticFoo; // bar\r\nExtendedClass.staticBar; // foo\r\n```\r\n\r\n### Creating classes with prototype, static and mixins\r\n\r\n```javascript\r\nvar EventEmitterMixin = {\r\n    on: function() {\r\n        return \"on\";\r\n    },\r\n\r\n    off: function() {\r\n        return \"off\";\r\n    },\r\n\r\n    emit: function() {\r\n        return \"emit\";\r\n    }\r\n};\r\n\r\nvar OtherMixin = {\r\n    other: function() {\r\n        return \"Other\";\r\n    }\r\n}\r\n\r\nvar EventEmitter = Class.create({}, {}, [EventEmitterMixin]);\r\nvar EventEmitterAndOther = Class.create({}, {}, [EventEmitterMixin, OtherMixin]);\r\n\r\nvar event = new EventEmitter();\r\nevent.on(); // on\r\nevent.off(); // off\r\nevent.emit(); // emit\r\nevent.other(); // undefined\r\n\r\nvar otherEvent = new EventEmitterAndOther();\r\nevent.on(); // on\r\nevent.off(); // off\r\nevent.emit(); // emit\r\nevent.other(); // Other\r\n```\r\n","google":"UA-45808486-2","note":"Don't delete this file! It's used internally to help with page regeneration."}